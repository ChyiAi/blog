<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[本站 搭建教程]]></title>
    <url>%2Fblog%2F2018%2F12%2F15%2Fhexo-doc%2F</url>
    <content type="text"><![CDATA[简介搭建博客的心由来已久，本篇文章为记录搭建过程。博客引擎 Hexo 模版 next，搭建系统环境为macOS MoJave 10.14.2，详细文档请移步官网。 配置安装环境 安装git 安装Node.js 安装Hexo 创建博客目录进入到要创建博客的工作目录，例如：$ cd /User/username/WorkSpaces123$ hexo init blog$ cd blog$ npm install blog目录结构 目录名称 描述 themes 主题安装目录 source 资源文件夹 source/_posts 文章资源文件夹 Hexo创建文件命令由于init命令是创建极简博客环境，所以标签tags、分类categories、关于about均没有对应目录，需要用到以下命令：1$ hexo new [layout] &lt;title&gt; 布局 layout 三种类型见官网123$ hexo new page tags$ hexo new page categories$ hexo new page about 创建完以上三个文件在 blog/source 目录下有对应文件生成，修改文件source/about/index.md中type类型为aboutsource/tags/index.md中type类型为tagssource/categories/index.md中type类型为categories 主题 下载nextHexo 官网有大量的主题提供下载，这里以 next 为例12$ cd blog$ git clone https://github.com/theme-next/hexo-theme-next themes/next 配置在下载完 next 主题之后，进入 themes/next目录，可以看到_config.yml文件 配置主题风格123456789# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemesscheme: Muse#scheme: Mist#scheme: Pisces#scheme: Gemini 以上四种主题风格可自行选择，详见官方文档 配置标签tags、分类categories、关于about目录123456789menu: home: / || home #about: /about/ || user #tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat 取消tags、categories、about的注释 配置语言环境这里要注意配置语言环境需要在blog/\_config.yml文件中配置，而在blog/themes/next/\_config.yml中是不起作用的 12# language: enlanguage: zh-Hans 设置博客目录hexo在本地环境运行时将占用4000端口，地址为：http://localhost:4000，但是实际部署情况，你可能需要自定义根目录,例如：http://localhost:4000/blog 那么需要修改\_config.yml文件中的root: /为root: /blog 拓展功能 搜索 分享自动部署安装部署插件 hexo-deployer-git1$ npm install hexo-deployer-git --save 添加配置12345deploy: type: git repo: &lt;repository url&gt; branch: [branch] message: [message] 参数 描述 repo 库地址 branch 分之名称]]></content>
  </entry>
  <entry>
    <title><![CDATA[git]]></title>
    <url>%2Fblog%2F2018%2F12%2F13%2Fgit%2F</url>
    <content type="text"><![CDATA[init1git init set up your git name and email123git config --local user.name clongcgit config --local user.email clongc1988@163.comgit remote add origin https://github.com/DeeMoxa/blog.git store user credential1git config credential.helper store add folder to my staging area1git add FOLDERNAME commit the folder1git commit -m &quot;add FOLDERNAME&quot; Clone1git clone https://github.com/clone Clone the repository at “REPOSITORY” to “my_cloned_repo”.1git clone https://github.com/clone my_cloned_repo status of someone in the files1git status rename move12git mv file_A.txt file_B.txtgit mv file_A.txt file_B.txt src investagete the log of repository1git log tag the current commit with ‘new_tag’1git tag &apos;new_tag&apos; push tag int remote repository1git push --tags origin master some files missing from the commit and add the missing file12git add missingfilegit commit --amend -m &apos;修正&apos; commit with The date1git commit --date=05.26.2017T15:00:00 -m anshitijiao unstage file under the situation of commit error1git reset HEAD fileName undo the last commit1git reset --soft HEAD~1 checkout the file from the last commit1git checkout FILENAME find the remote repository1git remote -v pull changes from origin repository1git pull origin master rebase location branch from origin/master and push it12345git rebase origin/master//git rebase onto A B C 把B到C段的commit 提交到A //p.s. rebase --onto的机制是左开右闭//即，不包含B 包含Cgit push origin master there have been modifications since your last commit . find out which line1git diff find out anybody modify the file1git blame FILENAME create new branch TEST1git branch TEST delete the branch1git branch -d BRANCHNAME merge the branch to the currently branch1git merge BRANCHNAME get origin but don’t merge it1git fetch origin reset HEAD origin by force.1234567git checkout .git fetch --allgit reset --hard origin/master// orgit fetch --all git reset --hard origin/mastergit pull]]></content>
      <categories>
        <category>design-patterns</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Intellij Idea 使用常见问题总结]]></title>
    <url>%2Fblog%2F2018%2F12%2F13%2Fidea%2F</url>
    <content type="text"><![CDATA[Plugins 安装插件Settings/Preference ⌘, -&gt; Plugins -&gt; Install plugin from disk.. （选择下载完成的jar） 浏览插件Settings/Preference ⌘, -&gt; Plugins -&gt; Browse repositories.. ToolBars在工具栏添加自定义按钮（以添加git工具push按钮为例）Settings/Preference ⌘, -&gt; Appearance &amp; Behavior -&gt; Menus and Toolbars -&gt; Navigation Bar Toolbar -&gt; NavBarVcsGroup由于git组件按钮属于Navigation Bar所以在这里添加 通过Add After找到push按钮]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fblog%2F2018%2F10%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
